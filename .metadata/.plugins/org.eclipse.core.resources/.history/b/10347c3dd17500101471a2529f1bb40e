package prajwal.in.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import prajwal.in.entity.CitizenInfo;
import prajwal.in.repo.CitizenInfoRepo;
import prajwal.in.repo.PlanRepo;

import java.util.List;
import java.util.Optional;

@Controller
@RequestMapping("/citizen-plan")
public class CitizenPlanController {

    @Autowired
    private CitizenInfoRepo citizenInfoRepo;

    @Autowired
    private PlanRepo planRepo;

    /**
     * Show plan selection form for a specific citizen (caseNumber)
     */
    @GetMapping("/select/{caseNumber}")
    public String showPlanSelection(@PathVariable String caseNumber, Model model) {
        model.addAttribute("caseNumber", caseNumber);
        model.addAttribute("plans", planRepo.findAll());
        return "dc_plan_selection"; // ← Match your file name!
    }


    /**
     * Apply for a plan — store as a new record for each plan
     */
    @PostMapping("/apply")
    public String applyForPlan(@RequestParam String caseNumber,
                               @RequestParam String planName,
                               RedirectAttributes redirectAttributes) {

        // 1. Check if this citizen already applied for the same plan
        Optional<CitizenInfo> existingApplication =
                citizenInfoRepo.findByCaseNumberAndSelectedPlan(caseNumber, planName);

        if (existingApplication.isPresent()) {
            redirectAttributes.addFlashAttribute("errMsg",
                    "You have already applied for this plan.");
            return "redirect:/citizen-plan/select/" + caseNumber;
        }

        // 2. Get all existing plan rows for this citizen
        List<CitizenInfo> existingPlans = citizenInfoRepo.findAllByCaseNumber(caseNumber);

        CitizenInfo newApplication = new CitizenInfo();
        newApplication.setCaseNumber(caseNumber);
        newApplication.setSelectedPlan(planName);

        if (!existingPlans.isEmpty()) {
            CitizenInfo copySource = existingPlans.get(0);
            newApplication.setMonthlySalary(copySource.getMonthlySalary());
            newApplication.setRentIncome(copySource.getRentIncome());
            newApplication.setPropertyIncome(copySource.getPropertyIncome());
            newApplication.setHighestEducation(copySource.getHighestEducation());
            newApplication.setGraduationYear(copySource.getGraduationYear());
            newApplication.setUniversityOrSchool(copySource.getUniversityOrSchool());
        }

        citizenInfoRepo.save(newApplication);

        redirectAttributes.addFlashAttribute("succMsg", "Plan applied successfully: " + planName);

        // 3. Redirect logic based on first application
        if (existingPlans.isEmpty()) {
            // First plan application: go to Income Details page
            return "redirect:/dc/income-manual?caseNumber=" + caseNumber;
            // your dc_income_details page is shown by dc/income-manual GET handler
        } else {
            // Already had some plan: go back to application view
            return "redirect:/application/view";
        }
    }

}
