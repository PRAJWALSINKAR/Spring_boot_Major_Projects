package prajwal.in.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import prajwal.in.entity.CitizenInfo;
import prajwal.in.repo.CitizenInfoRepo;

import java.util.List;
import java.util.Optional;

@Service
public class CitizenInfoServiceImpl implements CitizenInfoService {

    @Autowired
    private CitizenInfoRepo infoRepo;

    @Override
    public CitizenInfo getByCaseNumber(String caseNumber) {
        List<CitizenInfo> list = infoRepo.findAllByCaseNumber(caseNumber);
        return list.isEmpty() ? null : list.get(0);
    }

    @Override
    public CitizenInfo saveOrUpdate(CitizenInfo info) {
        // Backend safeguard
        if (info.getSelectedPlan() == null || info.getSelectedPlan().trim().isEmpty()) {
            throw new IllegalArgumentException("Selected plan cannot be null or empty.");
        }
        // Prevent duplicate record for same caseNumber+plan
        Optional<CitizenInfo> samePlan =
                infoRepo.findByCaseNumberAndSelectedPlan(info.getCaseNumber(), info.getSelectedPlan());
        if (samePlan.isPresent()) {
            return samePlan.get();
        }
        // Copy other fields from first record if exists
        List<CitizenInfo> existingList = infoRepo.findAllByCaseNumber(info.getCaseNumber());
        if (!existingList.isEmpty()) {
            CitizenInfo source = existingList.get(0);
            if (info.getMonthlySalary() == null) info.setMonthlySalary(source.getMonthlySalary());
            if (info.getRentIncome() == null) info.setRentIncome(source.getRentIncome());
            if (info.getPropertyIncome() == null) info.setPropertyIncome(source.getPropertyIncome());
            if (info.getHighestEducation() == null) info.setHighestEducation(source.getHighestEducation());
            if (info.getGraduationYear() == null) info.setGraduationYear(source.getGraduationYear());
            if (info.getUniversityOrSchool() == null) info.setUniversityOrSchool(source.getUniversityOrSchool());
        }
        return infoRepo.save(info);
    }
}
