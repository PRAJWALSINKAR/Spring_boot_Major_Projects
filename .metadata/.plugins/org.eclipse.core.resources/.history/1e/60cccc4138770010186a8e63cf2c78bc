package prajwal.in.repo;

import java.time.LocalDate;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import prajwal.in.dto.ReportRowDTO;
import prajwal.in.entity.CitizenEntity;

public interface ReportRepository extends JpaRepository<CitizenEntity, Long> {

    @Query(value = """
        SELECT ROW_NUMBER() OVER (ORDER BY c.full_name) AS serialNo,
               c.full_name AS fullName,
               c.email AS email,
               c.mobile_number AS mobileNumber,
               c.gender AS gender,
               c.ssn AS ssn,
               COALESCE(SUM(bt.benefit_amount),0) AS totalBenefitAmount
        FROM citizen c
        JOIN benefit_transaction bt ON bt.case_number = c.case_number
        WHERE (:gender IS NULL OR c.gender = :gender)
          AND (:planName IS NULL OR bt.plan_name = :planName)
          AND (:planStatus IS NULL OR bt.plan_status = :planStatus)
          AND (:startDate IS NULL OR bt.start_date >= :startDate)
          AND (:endDate IS NULL OR bt.end_date <= :endDate)
        GROUP BY c.full_name, c.email, c.mobile_number, c.gender, c.ssn
        ORDER BY c.full_name
        """, nativeQuery = true)
    List<Object[]> searchReportRaw(
        @Param("gender") String gender,
        @Param("planName") String planName,
        @Param("planStatus") String planStatus,
        @Param("startDate") LocalDate startDate,
        @Param("endDate") LocalDate endDate
    );

    // Dropdown options
    @Query(value = "SELECT DISTINCT plan_name FROM benefit_transaction WHERE plan_name IS NOT NULL", nativeQuery = true)
    List<String> getPlanNames();

    @Query(value = "SELECT DISTINCT plan_status FROM benefit_transaction WHERE plan_status IS NOT NULL", nativeQuery = true)
    List<String> getPlanStatuses();
}
