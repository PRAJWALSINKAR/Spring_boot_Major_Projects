package prajwal.in.service.impl;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;
import prajwal.in.dto.EligibilityResultDTO;
import prajwal.in.entity.CitizenEntity;
import prajwal.in.entity.CitizenInfo;
import prajwal.in.entity.EligibilityResult;
import prajwal.in.entity.Kid;
import prajwal.in.entity.Plan;
import prajwal.in.repo.CitizenInfoRepo;
import prajwal.in.repo.CitizenRepo;
import prajwal.in.repo.EligibilityResultRepo;
import prajwal.in.repo.KidRepo;
import prajwal.in.repo.PlanRepo;
import prajwal.in.service.EligibilityService;
import prajwal.in.util.EligibilityRulesEngine;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

@Service
@RequiredArgsConstructor
public class EligibilityServiceImpl implements EligibilityService {

    private final CitizenRepo citizenRepo;
    private final CitizenInfoRepo citizenInfoRepo;
    private final KidRepo kidRepo;
    private final PlanRepo planRepo;
    private final EligibilityResultRepo eligibilityResultRepo;
    private final EligibilityRulesEngine rulesEngine;

    @Override
    public List<EligibilityResultDTO> determineEligibility(String caseNumber) {
        List<EligibilityResultDTO> resultList = new ArrayList<>();

        // Pull Applicantâ€™s Personal Info
        CitizenEntity citizenEntity = citizenRepo.findByCaseNumber(caseNumber).orElse(null);
        if (citizenEntity == null) return resultList;

        // Pull Plan/Income Info
        List<CitizenInfo> citizenInfoList = citizenInfoRepo.findAllByCaseNumber(caseNumber);
        if (citizenInfoList.isEmpty()) return resultList;
        CitizenInfo citizenInfo = citizenInfoList.get(0);

        // Kids Data
        List<Kid> kids = kidRepo.findByCaseNumber(caseNumber);

        // All active plans
        List<Plan> plans = planRepo.findByActiveSw("Y");

        for (Plan plan : plans) {
            // Updated call with both entities to match new rule engine signature
            EligibilityResultDTO dto = rulesEngine.evaluatePlan(citizenEntity, citizenInfo, kids, plan);

            // Save result to DB
            EligibilityResult entity = new EligibilityResult();
            entity.setCaseNumber(dto.getCaseNumber());
            entity.setPlanName(dto.getPlanName());
            entity.setEligible(dto.getEligible());
            entity.setDenialReason(dto.getDenialReason());
            entity.setBenefitAmount(dto.getBenefitAmount());
            entity.setStartDate(dto.getStartDate());
            entity.setEndDate(dto.getEndDate());
            entity.setDeterminedAt(LocalDateTime.now());

            eligibilityResultRepo.save(entity);

            resultList.add(dto);
        }
        return resultList;
    }

    @Override
    public List<EligibilityResultDTO> getEligibilityResults(String caseNumber) {
        List<EligibilityResult> records = eligibilityResultRepo.findByCaseNumber(caseNumber);
        List<EligibilityResultDTO> dtos = new ArrayList<>();
        for (EligibilityResult rec : records) {
            dtos.add(new EligibilityResultDTO(
                    rec.getCaseNumber(),
                    rec.getPlanName(),
                    rec.getEligible(),
                    rec.getDenialReason(),
                    rec.getBenefitAmount(),
                    rec.getStartDate(),
                    rec.getEndDate()
            ));
        }
        return dtos;
    }
}
